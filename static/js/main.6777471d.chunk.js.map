{"version":3,"sources":["pages/GamePage/arrow-left.svg","pages/GamePage/arrow-right.svg","pages/LoginPage/LoginPage.js","utils/fetchQuiz.js","utils/indexQuiz.js","pages/GamePage/GameCard.js","utils/decodeHTMLEntities.js","pages/GamePage/GameHeader.js","pages/GamePage/GameControl.js","store/actions.js","pages/GamePage/GamePage.js","pages/ResultsPage/ResultsPage.js","pages/NoMatch/NoMatch.js","pages/App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","LoginPage","setUser","history","useHistory","useState","username","setUsername","className","placeholder","autoComplete","onChange","e","target","value","onClick","push","fetchQuiz","url","a","fetch","response","json","responseJSON","results","indexQuiz","quiz","map","question","index","position","cardData","userAnswer","isDisabled","onUserAnswer","formattedQuestion","text","entities","i","max","length","replace","RegExp","decodeHTMLEntities","id","type","name","defaultChecked","disabled","htmlFor","connect","state","userName","userScore","currentCard","cardLength","userAnswers","doneAnswers","dispatch","onSetScore","action","onSetDoneAnswers","answers","onSetInProgress","onSetCurrentCard","props","onToggleCardHandler","event","next","calculateScore","flipNext","flipPrev","correctAnswer","find","q","correct_answer","has","get","Map","set","sessionStorage","setItem","isPrevDisabled","src","arrowLeft","alt","width","isNextDisabled","arrowRight","onSetQuiz","onSetUserAnswers","onUpdateUserState","data","loading","setLoading","useEffect","getItem","userStateLoc","JSON","parse","getQuiz","then","catch","error","console","log","finally","window","onbeforeunload","userState","Array","from","stringify","onUserAnswerHandler","answer","key","onResetGame","headerContent","inProgress","onSetUserName","inProgressLoc","userNameLoc","path","to","exact","Boolean","location","hostname","match","initialState","reducer","isPlus","isNext","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KACA,0BAAMA,UAAU,YAAhB,KAC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","file":"static/js/main.6777471d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow-left.98bcd783.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow-right.c1bbccee.svg\";","import React, {useState} from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport './LoginPage.scss'\n\nexport default function LoginPage({setUser}) {\n  const history = useHistory()\n  const [username, setUsername] = useState('')\n\n  const onStartHandler = () => {\n    setUser(username)\n    history.push('/')\n  }\n\n  return (\n    <div className='lp-wrapper'>\n      <div className=\"lp-content\">\n        <h3 className='lp-content_header'>Let's play a game!</h3>\n        <div className='lp-content_input-group'>\n          <input placeholder=\" \"\n                 className=\"input-control\"\n                 autoComplete='false'\n                 onChange={(e)=>setUsername(e.target.value)}/>\n          <div className=\"floater\" />\n        </div>\n        <button className={`lp-content_button ${!username && 'disabled'}`}\n                onClick={onStartHandler}>\n          Start\n        </button>\n      </div>\n    </div>\n  )\n}","export default async function fetchQuiz(url) {\n  const response = await fetch(url)\n  const responseJSON = await response.json()\n  return responseJSON.results\n}","export default function indexQuiz(quiz) {\n  return quiz.map((question, index) => {\n    return {\n      ...question,\n      position: index + 1\n    }\n  })\n}","import React from \"react\"\nimport { decodeHTMLEntities } from '../../utils'\nimport './GameCard.scss'\n\nexport default ({cardData, userAnswer, isDisabled, onUserAnswer}) => {\n  const formattedQuestion = decodeHTMLEntities(cardData.question)\n\n  return (\n    <div className=\"gpc-wrapper\">\n      <h4 className='gpc-header'>{ formattedQuestion }</h4>\n      <div className=\"gpc-radio-group\"\n           onChange={(e)=>onUserAnswer(e.target.value)}>\n        <div className=\"gpc-radio-group_item\">\n          <input id=\"True\"\n                 type=\"radio\"\n                 name=\"answer\"\n                 value=\"True\"\n                 defaultChecked={userAnswer === 'True'}\n                 disabled={isDisabled} />\n          <label htmlFor=\"True\">Yes</label>\n        </div>\n        <div className=\"gpc-radio-group_item\">\n          <input id=\"False\"\n                 type=\"radio\"\n                 name=\"answer\"\n                 value=\"False\"\n                 defaultChecked={userAnswer === 'False'}\n                 disabled={isDisabled}/>\n          <label htmlFor=\"False\">No</label>\n        </div>\n      </div>\n    </div>\n  )\n}","export default function decodeHTMLEntities(text) {\n  const entities = [\n    ['amp', '&'],\n    ['apos', '\\''],\n    ['#x27', '\\''],\n    ['#x2F', '/'],\n    ['#039', '\\''],\n    ['#47', '/'],\n    ['lt', '<'],\n    ['gt', '>'],\n    ['nbsp', ' '],\n    ['quot', '\"']\n  ];\n\n  for (let i = 0, max = entities.length; i < max; ++i) {\n    text = text.replace(new RegExp('&'+entities[i][0]+';', 'g'), entities[i][1]);\n  }\n\n  return text;\n}","import React from \"react\";\nimport { connect } from 'react-redux'\n\nconst GameHeader = ({ userName, userScore, currentCard, cardLength }) => {\n  return (\n    <header>\n      <span>User: <b>{ userName }</b></span>\n      <span>Card: <b>{ currentCard }/{ cardLength }</b></span>\n      <span>Score: <b>{ userScore }</b></span>\n    </header>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    userName: state.userName,\n    userScore: state.userScore,\n    currentCard: state.currentCard\n  }\n}\n\nexport default connect(mapStateToProps)(GameHeader)","import React from \"react\";\nimport { useHistory } from \"react-router-dom\"\nimport { connect } from 'react-redux'\nimport * as actionTypes from '../../store/actions'\nimport arrowLeft from \"./arrow-left.svg\";\nimport arrowRight from \"./arrow-right.svg\";\n\nconst GameControl = (props) => {\n  const { type, quiz, currentCard, userAnswers, doneAnswers, onSetScore, onSetDoneAnswers, onSetInProgress, onSetCurrentCard } = props\n  const history = useHistory()\n\n  const onToggleCardHandler = (event, next) => {\n    if (next) {\n      calculateScore()\n      flipNext()\n    } else {\n      flipPrev()\n    }\n  }\n\n  const calculateScore = () => {\n    const correctAnswer = quiz.find(q => q.position === currentCard).correct_answer\n\n    if (!doneAnswers.has(currentCard)) {\n      correctAnswer === userAnswers.get(currentCard)\n        ? onSetScore('plus')\n        : onSetScore('minus')\n    }\n  }\n\n  const flipNext = () => {\n    onSetDoneAnswers(new Map(doneAnswers.set(currentCard, true)))\n\n    if (currentCard === quiz.length) {\n      sessionStorage.setItem('inProgress', 'false')\n      onSetInProgress(false)\n      history.push('/results')\n    } else {\n      onSetCurrentCard('next')\n    }\n  }\n\n  const flipPrev = () => onSetCurrentCard('prev')\n\n  if (type === 'prev') {\n    const isPrevDisabled = currentCard === 1\n    return (\n      <div className={`gp-card_prev ${isPrevDisabled && 'disabled'}`}\n           onClick={onToggleCardHandler}>\n        <img src={arrowLeft} alt=\"arrow-left\" width='50px'/>\n      </div>\n    )\n  } else {\n    const isNextDisabled = !userAnswers.has(currentCard)\n    return (\n      <div className={`gp-card_next ${isNextDisabled && 'disabled'}`}\n           onClick={(e)=>onToggleCardHandler(e,true)}>\n        <img src={arrowRight} alt=\"arrow-right\" width='50px' />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    quiz: state.quiz,\n    currentCard: state.currentCard,\n    userAnswers: state.userAnswers,\n    doneAnswers: state.doneAnswers\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetScore: (action) => dispatch({type: actionTypes.SET_SCORE, action}),\n    onSetDoneAnswers: (answers) => dispatch({type: actionTypes.SET_DONE_ANSWERS, answers}),\n    onSetInProgress: (value) => dispatch({type: actionTypes.SET_IN_PROGRESS, value}),\n    onSetCurrentCard: (value) => dispatch({type: actionTypes.SET_CURRENT_CARD, value})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameControl)","export const SET_IN_PROGRESS = 'SET_IN_PROGRESS'\nexport const SET_USER_NAME = 'SET_USER_NAME'\nexport const SET_USER_SCORE = 'SET_USER_SCORE'\nexport const SET_SCORE = 'SET_SCORE'\nexport const RESET_GAME = 'RESET_GAME'\nexport const SET_QUIZ = 'SET_QUIZ'\nexport const SET_CURRENT_CARD = 'SET_CURRENT_CARD'\nexport const SET_USER_ANSWERS = 'SET_USER_ANSWERS'\nexport const SET_DONE_ANSWERS = 'SET_DONE_ANSWERS'\nexport const ON_UPDATE_USER_STATE = 'ON_UPDATE_USER_STATE'","import React, { useEffect, useState } from \"react\"\nimport { connect } from 'react-redux'\nimport * as actionTypes from '../../store/actions'\nimport GameCard from \"./GameCard\"\nimport GameHeader from \"./GameHeader\"\nimport GameControl from \"./GameControl\"\nimport { fetchQuiz, indexQuiz } from '../../utils'\nimport './GamePage.scss'\n\nconst QUIZ_URL = 'https://opentdb.com/api.php?amount=10&category=9&difficulty=medium&type=boolean'\n\nconst GamePage = (props) => {\n  const { userScore, quiz, onSetQuiz, currentCard, userAnswers, onSetUserAnswers, doneAnswers, onUpdateUserState } = props\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const inProgressLoc = sessionStorage.getItem('inProgress') === 'true'\n\n    if (inProgressLoc) {\n      const userStateLoc = JSON.parse(sessionStorage.getItem('userState'))\n      onUpdateUserState(userStateLoc)\n      setLoading(false)\n    } else {\n      getQuiz()\n        .then((quiz) => {\n          sessionStorage.setItem('inProgress', 'true')\n          onSetQuiz(quiz)\n        })\n        .catch((error) => console.log(error))\n        .finally(() => setLoading(false))\n    }\n  }, [onUpdateUserState, onSetQuiz])\n\n  const getQuiz = async () => {\n    const quiz = await fetchQuiz(QUIZ_URL)\n    return indexQuiz(quiz)\n  }\n\n  // USING THIS FOR HANDLE MANUAL CHANGE OF URL\n  window.onbeforeunload = () => {\n    const userState = {\n      quiz,\n      currentCard,\n      userScore,\n      userAnswers: Array.from(userAnswers),\n      doneAnswers: Array.from(doneAnswers)\n    }\n    sessionStorage.setItem('userState', JSON.stringify(userState))\n  }\n\n  const onUserAnswerHandler = (answer) => {\n    onSetUserAnswers(new Map(userAnswers.set(currentCard, answer)))\n  }\n\n  return (\n    <div className='gp-wrapper'>\n      {loading\n        ? <h3 className='gp-loading'>Loading...</h3>\n        : (\n          <>\n            <GameHeader cardLength={quiz.length} />\n\n            <div className=\"gp-card_wrapper\">\n              <GameControl type='prev' />\n\n              {quiz.map(q => q.position === currentCard &&\n                <GameCard key={q.position}\n                          cardData={q}\n                          userAnswer={userAnswers.get(currentCard)}\n                          isDisabled={doneAnswers.has(currentCard)}\n                          onUserAnswer={onUserAnswerHandler} />\n              )}\n\n              <GameControl type='next' />\n            </div>\n          </>\n        )\n      }\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    quiz: state.quiz,\n    currentCard: state.currentCard,\n    userAnswers: state.userAnswers,\n    userScore: state.userScore,\n    doneAnswers: state.doneAnswers\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetQuiz: (quiz) => dispatch({type: actionTypes.SET_QUIZ, quiz}),\n    onSetUserAnswers: (answers) => dispatch({type: actionTypes.SET_USER_ANSWERS, answers}),\n    onUpdateUserState: (data) => dispatch({type: actionTypes.ON_UPDATE_USER_STATE, data})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GamePage)","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport * as actionTypes from '../../store/actions'\nimport './ResultsPage.scss'\n\nconst ResultsPage = ({ userName, userScore, onResetGame, onUpdateUserState }) => {\n  const history = useHistory()\n\n  const headerContent = () => {\n    switch (true) {\n      case (userScore <= 0): return `Not good, ${userName}...`\n      case (userScore > 0 && userScore <= 50): return `Nice job, ${userName}!`\n      case (userScore > 50): return `Wow! Great, ${userName}!`\n      default: return `Nice job, ${userName}!`\n    }\n  }\n\n  const onPlayAgainHandler = () => {\n    const userState = {\n      quiz: null,\n      currentCard: 1,\n      userScore,\n      userAnswers: new Map(),\n      doneAnswers: new Map()\n    }\n    onUpdateUserState(userState)\n    history.push('/')\n  }\n\n  const onNewGameHandler = () => {\n    onResetGame()\n    history.push('/')\n  }\n\n  return (\n    <div className=\"rp-wrapper\">\n      <main className=\"rp-content\">\n        <h3 className='rp-header'>{ headerContent() }</h3>\n        <p>You've got <b>{ userScore }</b> points</p>\n        <div className=\"rp-button-group\">\n          <button className='rp-button-group_item'\n                  onClick={onPlayAgainHandler}>\n            Play again\n          </button>\n          <button className='rp-button-group_item'\n                  onClick={onNewGameHandler}>\n            New game\n          </button>\n        </div>\n      </main>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    userName: state.userName,\n    userScore: state.userScore\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onResetGame: () => dispatch({type: actionTypes.RESET_GAME}),\n    onUpdateUserState: (data) => dispatch({type: actionTypes.ON_UPDATE_USER_STATE, data})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsPage)","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport './NoMatch.scss'\n\nexport default function({userName='stranger'}) {\n  const history = useHistory()\n\n  return (\n    <main className='container'>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>4</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <span className='particle'>0</span>\n      <article className='content'>\n        <p>Damnit {userName},</p>\n        <p>You got lost in the <strong>404</strong> galaxy.</p>\n        <p>\n          <button onClick={() => history.push('/')}>Go back to earth.</button>\n        </p>\n      </article>\n    </main>\n  )\n}","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport * as actionTypes from '../store/actions'\nimport LoginPage from \"./LoginPage/LoginPage\";\nimport GamePage from \"./GamePage/GamePage\";\nimport ResultsPage from \"./ResultsPage/ResultsPage\";\nimport NoMatch from \"./NoMatch/NoMatch\";\n\nfunction App(props) {\n  const {inProgress, userName, onSetInProgress, onSetUserName} = props\n\n  useEffect(() => {\n    const inProgressLoc = sessionStorage.getItem('inProgress')\n    const userNameLoc = sessionStorage.getItem('userName')\n\n    if (inProgressLoc) onSetInProgress(inProgressLoc === 'true')\n    if (userNameLoc) onSetUserName(userNameLoc)\n  }, [onSetInProgress, onSetUserName])\n\n  const setUserHandler = (userName) => {\n    sessionStorage.setItem('userName', userName);\n    onSetUserName(userName)\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          { userName\n            ? <Redirect to=\"/\" />\n            : <LoginPage setUser={setUserHandler} />\n          }\n        </Route>\n        <Route exact path=\"/\">\n          { userName\n            ? <GamePage />\n            : <Redirect to=\"/login\" />\n          }\n        </Route>\n        <Route path=\"/results\">\n          { userName\n            ? inProgress\n              ? <Redirect to=\"/\" />\n              : <ResultsPage userName={userName} />\n            : <Redirect to=\"/login\" />\n          }\n        </Route>\n        <Route path=\"*\">\n          <NoMatch userName={userName} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    inProgress: state.inProgress,\n    userName: state.userName\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetUserName: (userName) => dispatch({type: actionTypes.SET_USER_NAME, userName}),\n    onSetInProgress: (value) => dispatch({type: actionTypes.SET_IN_PROGRESS, value})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from './actions'\n\nconst initialState = {\n  inProgress: false,\n  userName: '',\n  userScore: 0,\n  quiz: null,\n  currentCard: 1,\n  userAnswers: new Map(),\n  doneAnswers: new Map()\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_IN_PROGRESS:\n      return {\n        ...state,\n        inProgress: action.value\n      }\n    case actionTypes.SET_USER_NAME:\n      return {\n        ...state,\n        userName: action.userName\n      }\n    case actionTypes.SET_USER_SCORE:\n      return {\n        ...state,\n        userScore: action.userScore\n      }\n    case actionTypes.SET_SCORE:\n      const isPlus = action.action === 'plus'\n      return {\n        ...state,\n        userScore: isPlus ? state.userScore + 10 : state.userScore - 10\n      }\n    case actionTypes.RESET_GAME:\n      return {\n        ...state,\n        quiz: null,\n        currentCard: 1,\n        userScore: 0,\n        userAnswers: new Map(),\n        doneAnswers: new Map()\n      }\n    case actionTypes.SET_QUIZ:\n      return {\n        ...state,\n        quiz: action.quiz\n      }\n    case actionTypes.SET_CURRENT_CARD:\n      const isNext = action.value === 'next'\n      return {\n        ...state,\n        currentCard: isNext ? state.currentCard + 1 : state.currentCard - 1\n      }\n    case actionTypes.SET_USER_ANSWERS:\n      return {\n        ...state,\n        userAnswers: action.answers\n      }\n    case actionTypes.SET_DONE_ANSWERS:\n      return {\n        ...state,\n        doneAnswers: action.answers\n      }\n    case actionTypes.ON_UPDATE_USER_STATE:\n      const { quiz, currentCard, userScore, userAnswers, doneAnswers } = action.data\n      return {\n        ...state,\n        quiz,\n        currentCard,\n        userScore,\n        userAnswers: new Map(userAnswers),\n        doneAnswers: new Map(doneAnswers)\n      }\n    default: return state\n  }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from \"redux\";\nimport './index.css';\nimport App from './pages/App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from \"./store/reducer\";\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}